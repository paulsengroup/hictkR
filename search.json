[{"path":"https://paulsengroup.github.io/hictkR/articles/hictkR-vignette.html","id":"opening-files","dir":"Articles","previous_headings":"","what":"Opening files","title":"","text":"hictkR supports opening .hic .cool files using File() function. opening files .hic format, resolution mandatory parameter. hictkR file handles returned File() provide several attributes storing static properties opened file File “interactions.hic” following resolution: 100000 bp","code":"path <- system.file(\"extdata\", \"interactions.hic\", package = \"hictkR\") f <- File(path, resolution = 100000) path <- f$path resolution <- as.integer(f$resolution)  paste(\"File \\\"\",   basename(path),   \"\\\" has the following resolution: \",   resolution,   \"bp\",   sep = \"\" )"},{"path":"https://paulsengroup.github.io/hictkR/articles/hictkR-vignette.html","id":"accessing-chromosomes-and-bins","dir":"Articles","previous_headings":"","what":"Accessing chromosomes and bins","title":"","text":"properties store list chromosomes well bin table associated opened file. Chromosomes Bin table Normalizations","code":"chroms <- f$chromosomes bins <- f$bins normalizations <- f$normalizations"},{"path":"https://paulsengroup.github.io/hictkR/articles/hictkR-vignette.html","id":"fetching-interactions","dir":"Articles","previous_headings":"","what":"Fetching interactions","title":"","text":"hictkR support fetching interactions fetch() function.","code":""},{"path":"https://paulsengroup.github.io/hictkR/articles/hictkR-vignette.html","id":"fetch-genome-wide-interactions-with-genomic-coordinates","dir":"Articles","previous_headings":"Fetching interactions","what":"Fetch genome-wide interactions with genomic coordinates","title":"","text":"Interactions can also normalized using one available normalization methods (see f$normalizations).","code":"fetch(f, join = TRUE) fetch(f, join = TRUE, normalization = \"ICE\")"},{"path":"https://paulsengroup.github.io/hictkR/articles/hictkR-vignette.html","id":"fetch-interactions-for-a-region-of-interest","dir":"Articles","previous_headings":"Fetching interactions","what":"Fetch interactions for a region of interest","title":"","text":"hictkR can instructed fetch interactions region interest. much efficient fetching genome-wide interactions filtering interactions using R.","code":"fetch(f, \"chr2L\", join = TRUE) fetch(f,   \"chr2L:0-10,000,000\",   \"chr3R:10,000,000-20,000,000\",   join = TRUE )"},{"path":"https://paulsengroup.github.io/hictkR/articles/hictkR-vignette.html","id":"fetch-interactions-as-a-dense-matrix","dir":"Articles","previous_headings":"Fetching interactions","what":"Fetch interactions as a dense matrix","title":"","text":"hictkR can return interactions Matrix specifying type=\"dense\". can useful visualize interaction matrices heatmaps.","code":"fetch(f,   \"chr2L:0-1,000,000\",   \"chr3R:1,000,000-2,000,000\",   type = \"dense\" ) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,]   11    4    9    7   10    1   15    3    5    29 #>  [2,]   11   10   15    4   14    7    5    2   12    44 #>  [3,]    6    5   11    8   12    8    6    3   12    30 #>  [4,]    6    2    8    3    5    7    1    2    7    15 #>  [5,]    9    9   12   11   18   12    9    2   11    46 #>  [6,]   17    7   13    4   16    8    1    4    9    64 #>  [7,]    2    2    4    4    5    5    5    0    8    20 #>  [8,]    3    6   11    4   11    7    3    1    9    19 #>  [9,]   17    6    7    4   11    9    3    1   14    76 #> [10,]    0    2    9    2    7    2    4    1    3     7 m <- fetch(f, \"chr3R:0-20,000,000\", normalization = \"ICE\", type = \"dense\") image(log(m), axes = FALSE)"},{"path":"https://paulsengroup.github.io/hictkR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Roberto Rossini. Author, maintainer, copyright holder.","code":""},{"path":"https://paulsengroup.github.io/hictkR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rossini R, Paulsen J (2024). “hictk: blazing fast toolkit work .hic .cool files.” Bioinformatics, 40(7), btae408. ISSN 1367-4811, doi:10.1093/bioinformatics/btae408, https://academic.oup.com/bioinformatics/article-pdf/40/7/btae408/58385157/btae408.pdf, https://doi.org/10.1093/bioinformatics/btae408.","code":"@Article{rossini_2024_hictk,   title = {hictk: blazing fast toolkit to work with .hic and .cool files},   author = {Roberto Rossini and Jonas Paulsen},   journal = {Bioinformatics},   volume = {40},   number = {7},   pages = {btae408},   year = {2024},   month = {06},   abstract = {Hi-C is gaining prominence as a method for mapping genome organization. With declining sequencing costs and a growing demand for higher-resolution data, efficient tools for processing Hi-C datasets at different resolutions are crucial. Over the past decade, the .hic and Cooler file formats have become the de-facto standard to store interaction matrices produced by Hi-C experiments in binary format. Interoperability issues make it unnecessarily difficult to convert between the two formats and to develop applications that can process each format natively. We developed hictk, a toolkit that can transparently operate on .hic and .cool files with excellent performance. The toolkit is written in C++ and consists of a C++ library with Python and R bindings as well as CLI tools to perform common operations directly from the shell, including converting between .hic and .mcool formats. We benchmark the performance of hictk and compare it with other popular tools and libraries. We conclude that hictk significantly outperforms existing tools while providing the flexibility of natively working with both file formats without code duplication. The hictk library, Python bindings and CLI tools are released under the MIT license as a multi-platform application available at github.com/paulsengroup/hictk. Pre-built binaries for Linux and macOS are available on bioconda. Python bindings for hictk are available on GitHub at github.com/paulsengroup/hictkpy, while R bindings are available on GitHub at github.com/paulsengroup/hictkR.},   issn = {1367-4811},   doi = {10.1093/bioinformatics/btae408},   url = {https://doi.org/10.1093/bioinformatics/btae408},   eprint = {https://academic.oup.com/bioinformatics/article-pdf/40/7/btae408/58385157/btae408.pdf}, }"},{"path":"https://paulsengroup.github.io/hictkR/index.html","id":"hictkr","dir":"","previous_headings":"","what":"R Bindings for hictk: Read .cool and .hic Files Directly from R","title":"R Bindings for hictk: Read .cool and .hic Files Directly from R","text":"R bindings hictk, blazing fast toolkit work .hic .cool files. looking Python API, checkout hictkpy repository.","code":""},{"path":"https://paulsengroup.github.io/hictkR/index.html","id":"installing-hictkr","dir":"","previous_headings":"","what":"Installing hictkR","title":"R Bindings for hictk: Read .cool and .hic Files Directly from R","text":"hictkR can installed CRAN GitHub using devtools: hictkR contains extensions written C++ need compiled hictkR installed. requires compiler toolchain supporting C++17, : GCC 8+ Clang 8+ Apple-Clang 10.0+ Windows suitable compiler toolchain can installed using Rtools. hictkR depends libhictk, C++ library underlies hictk. libhictk header-library depends several third-party packages, boost HDF5. Instead requiring users manually install required dependencies, hictkR comes configure (configure.win) script download, configure, build required dependencies using Conan. brief, script : Setup temporary folder inside package build folder. temporary files created inside folder, automatically deleted hictkR successfully installed Generate cleanup script remove build artifacts calling e.g. devtools::install(args=c(\"--clean\")) Download uv astral.sh Use uv create environment conan, cmake, ninja. modern version Python available host machine, uv first download install Python inside temporary folder.Python required run Conan Configure Conan build artifacts stored inside package temporary folder Use Conan build hictk dependencies (see tools/conanfile.py) Special care taken ensure necessary dependencies built. example, hictk depends boost, requires handful components (header-). Thus, Conan instructed build boost modules strictly needed Generate Makevars file appropriate include paths link flags, R build system can find hictk dependencies Makevars generated, placed inside src/, rest build process driven R’s build system. Windows, ’s additional step build b2, required build boost.Conan supposed install, necessary, build b2, work Rtools build environment. can customize temporary files placed using following two environment variables: HICTKR_TMPDIR: temporary files generated configure script stored HICTKR_CONAN_HOME: used set CONAN_HOME variable, build files generate Conan stored. debugging build failures, may good idea set variable, Conan build dependency scratch every time Finally, Conan configured preferentially use C C++ compilers set CC CXX environment variables. Thus, Linux macOS, recommend setting variables compiler used R.","code":"# Install from CRAN install.packages(\"hictkR\")  # Install from GitHub install.packages(\"devtools\") devtools::install_github(\"paulsengroup/hictkR@v0.1.0\")"},{"path":"https://paulsengroup.github.io/hictkR/index.html","id":"using-hictkr","dir":"","previous_headings":"","what":"Using hictkR","title":"R Bindings for hictk: Read .cool and .hic Files Directly from R","text":"Refer manual vignette available paulsengroup.github.io/hictkR examples use hictkR.","code":"library(hictkR)  path <- \"file.mcool\"  # \"file.hic\" f <- File(path, resolution=100000)  df <- fetch(f, \"chr1:0-10,000,000\", \"chr2:0-20,000,000\", join=TRUE) df"},{"path":"https://paulsengroup.github.io/hictkR/index.html","id":"citing","dir":"","previous_headings":"","what":"Citing","title":"R Bindings for hictk: Read .cool and .hic Files Directly from R","text":"use hictkR research, please cite following publication: Roberto Rossini, Jonas Paulsen, hictk: blazing fast toolkit work .hic .cool files Bioinformatics, Volume 40, Issue 7, July 2024, btae408, https://doi.org/10.1093/bioinformatics/btae408","code":"@article{hictk,     author = {Rossini, Roberto and Paulsen, Jonas},     title = \"{hictk: blazing fast toolkit to work with .hic and .cool files}\",     journal = {Bioinformatics},     volume = {40},     number = {7},     pages = {btae408},     year = {2024},     month = {06},     issn = {1367-4811},     doi = {10.1093/bioinformatics/btae408},     url = {https://doi.org/10.1093/bioinformatics/btae408},     eprint = {https://academic.oup.com/bioinformatics/article-pdf/40/7/btae408/58385157/btae408.pdf}, }"},{"path":"https://paulsengroup.github.io/hictkR/reference/File.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a .hic or .cool file for reading — File","title":"Open a .hic or .cool file for reading — File","text":"Open .hic .cool file reading","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/File.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a .hic or .cool file for reading — File","text":"","code":"File(path, resolution = NULL, matrix_type = \"observed\", matrix_unit = \"BP\")"},{"path":"https://paulsengroup.github.io/hictkR/reference/File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a .hic or .cool file for reading — File","text":"path path file opened (Cooler URI syntax supported). resolution matrix resolution. Required file multi-resolution (e.g., .hic .mcool). matrix_type type matrix opened. one \"observed\", \"oe\" \"expected\". matrix_unit unit matrix opened. one \"BP\", \"FRAG\".","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/File.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a .hic or .cool file for reading — File","text":"file handle.","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/File.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a .hic or .cool file for reading — File","text":"","code":"if (FALSE) { # \\dontrun{ File(\"interactions.cool\") File(\"interactions.mcool::/resolutions/100000\") File(\"interactions.mcool\", 100000) File(\"interactions.hic\", 100000) } # }"},{"path":"https://paulsengroup.github.io/hictkR/reference/MultiResFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Opena a .mcool file for reading — MultiResFile","title":"Opena a .mcool file for reading — MultiResFile","text":"Opena .mcool file reading","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/MultiResFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Opena a .mcool file for reading — MultiResFile","text":"","code":"MultiResFile(path)"},{"path":"https://paulsengroup.github.io/hictkR/reference/MultiResFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Opena a .mcool file for reading — MultiResFile","text":"path path file opened.","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/MultiResFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Opena a .mcool file for reading — MultiResFile","text":"file handle.","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/MultiResFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Opena a .mcool file for reading — MultiResFile","text":"","code":"if (FALSE) { # \\dontrun{ MultiResFile(\"interactions.mcool\") } # }"},{"path":"https://paulsengroup.github.io/hictkR/reference/SingleCellFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Opena a .scool file for reading — SingleCellFile","title":"Opena a .scool file for reading — SingleCellFile","text":"Opena .scool file reading","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/SingleCellFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Opena a .scool file for reading — SingleCellFile","text":"","code":"SingleCellFile(path)"},{"path":"https://paulsengroup.github.io/hictkR/reference/SingleCellFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Opena a .scool file for reading — SingleCellFile","text":"path path file opened.","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/SingleCellFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Opena a .scool file for reading — SingleCellFile","text":"file handle.","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/SingleCellFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Opena a .scool file for reading — SingleCellFile","text":"","code":"if (FALSE) { # \\dontrun{ SingleCellFile(\"interactions.scool\") } # }"},{"path":"https://paulsengroup.github.io/hictkR/reference/fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch interactions from a File object — fetch","title":"Fetch interactions from a File object — fetch","text":"Fetch interactions File object","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch interactions from a File object — fetch","text":"","code":"fetch(   file,   range1 = NULL,   range2 = NULL,   normalization = \"NONE\",   count_type = \"int\",   join = FALSE,   query_type = \"UCSC\",   type = \"df\" )"},{"path":"https://paulsengroup.github.io/hictkR/reference/fetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch interactions from a File object — fetch","text":"file file interactions fetched. range1 first set genomic coordinates region queried. Accepted formats UCSC BED format. provided, genome-wide interactions returned. range2 second set genomic coordinates region queried. provided, range2 assumed identical range1. normalization name normalization factors used balance interactions. Specify \"NONE\" return raw interactions. count_type data type used fetch interactions. \"int\" \"float\" join join genomic coordinates onto pixels. TRUE, interactions returned bedgraph2 format. FALSE, interactions returned COO format. Ignored type=\"dense\". query_type type queries provided range1 range2 parameters. Types query supported: \"UCSC\", \"BED\". type interactions format. Supported formats: \"df\", \"dense\".","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/fetch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch interactions from a File object — fetch","text":"DataFrame Matrix object interactions given query.","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/fetch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch interactions from a File object — fetch","text":"","code":"if (FALSE) { # \\dontrun{ f <- File(   \"interactions.hic\",   1000000 ) fetch(f) # Fetch genome-wide interactions fetch(f, \"chr2L\") # Fetch interactions overlapping a symmetric query fetch(   f,   \"chr2L:0-10,000,000\",   \"chr3L:10,000,000-20,000,000\" ) # Fetch interactions overlapping an asymmetric query fetch(f, normalization = \"ICE\") # Fetch ICE-normalized interactions fetch(f, join = TRUE) # Fetch interactions together with their genomic coordinates fetch(f,   \"chr1\\t0\\t10000000\",   query_type = \"BED\" ) # Fetch interactions given a query in BED format fetch(f, type = \"dense\") # Fetch interactions in dense format (i.e. as a Matrix) } # }"},{"path":"https://paulsengroup.github.io/hictkR/reference/hictkR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"hictkR: R Bindings for 'hictk': Read .cool and .hic Files Directly from R — hictkR-package","title":"hictkR: R Bindings for 'hictk': Read .cool and .hic Files Directly from R — hictkR-package","text":"Provides R interface 'hictk', enabling users fetch various types information, including interactions, files .cool, .mcool, .hic format.","code":""},{"path":[]},{"path":"https://paulsengroup.github.io/hictkR/reference/hictkR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"hictkR: R Bindings for 'hictk': Read .cool and .hic Files Directly from R — hictkR-package","text":"Maintainer: Roberto Rossini roberros@uio.(ORCID) [copyright holder]","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/hictkR_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Open files in .cool, .mcool, .scool, and .hic format — hictkR_open","title":"Open files in .cool, .mcool, .scool, and .hic format — hictkR_open","text":"Open files .cool, .mcool, .scool, .hic format","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/hictkR_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open files in .cool, .mcool, .scool, and .hic format — hictkR_open","text":"","code":"hictkR_open(path, resolution = NULL, cell = NULL)"},{"path":"https://paulsengroup.github.io/hictkR/reference/hictkR_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open files in .cool, .mcool, .scool, and .hic format — hictkR_open","text":"path path file opened (Cooler URI syntax supported). resolution resolution file opened. Required file .hic format. cell name cell opened. Ignored file .scool format.","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/hictkR_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open files in .cool, .mcool, .scool, and .hic format — hictkR_open","text":"file handle appropriate type.","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/hictkR_open.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open files in .cool, .mcool, .scool, and .hic format — hictkR_open","text":"","code":"if (FALSE) { # \\dontrun{ hictkR_open(\"interactions.cool\") hictkR_open(\"interactions.mcool\") hictkR_open(\"interactions.scool\") hictkR_open(\"interactions.mcool\", resolution = 10000) hictkR_open(\"interactions.hic\", resolution = 10000) hictkR_open(\"interactions.scool\", cell = \"id_0001\") } # }"},{"path":"https://paulsengroup.github.io/hictkR/reference/is_cooler.html","id":null,"dir":"Reference","previous_headings":"","what":"Test whether a file is in .cool format — is_cooler","title":"Test whether a file is in .cool format — is_cooler","text":"Test whether file .cool format","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/is_cooler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test whether a file is in .cool format — is_cooler","text":"","code":"is_cooler(path)"},{"path":"https://paulsengroup.github.io/hictkR/reference/is_cooler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test whether a file is in .cool format — is_cooler","text":"path path file tested (Cooler URI syntax supported).","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/is_hic_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Test whether a file is in .cool format — is_hic_file","title":"Test whether a file is in .cool format — is_hic_file","text":"Test whether file .cool format","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/is_hic_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test whether a file is in .cool format — is_hic_file","text":"","code":"is_hic_file(path)"},{"path":"https://paulsengroup.github.io/hictkR/reference/is_hic_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test whether a file is in .cool format — is_hic_file","text":"path path file tested.","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/is_multires_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Test whether a file is in .mcool format — is_multires_file","title":"Test whether a file is in .mcool format — is_multires_file","text":"Test whether file .mcool format","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/is_multires_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test whether a file is in .mcool format — is_multires_file","text":"","code":"is_multires_file(path)"},{"path":"https://paulsengroup.github.io/hictkR/reference/is_multires_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test whether a file is in .mcool format — is_multires_file","text":"path path file tested.","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/is_scool_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Test whether a file is in .cool format — is_scool_file","title":"Test whether a file is in .cool format — is_scool_file","text":"Test whether file .cool format","code":""},{"path":"https://paulsengroup.github.io/hictkR/reference/is_scool_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test whether a file is in .cool format — is_scool_file","text":"","code":"is_scool_file(path)"},{"path":"https://paulsengroup.github.io/hictkR/reference/is_scool_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test whether a file is in .cool format — is_scool_file","text":"path path file tested.","code":""}]
