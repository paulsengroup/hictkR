#!/usr/bin/env sh

# Copyright (C) 2025 Roberto Rossini <roberros@uio.no>
#
# SPDX-License-Identifier: GPL-2.0-or-later
#
# This library is free software: you can redistribute it and/or
# modify it under the terms of the GNU Public License as published
# by the Free Software Foundation; either version 3 of the License,
# or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Public License along
# with this library.  If not, see
# <https://www.gnu.org/licenses/>.


set -e
set -u

wd="$PWD"
pkg_src_dir="$(dirname "$0")"

if command -v cygpath; then
  pkg_src_dir="$(cygpath -a -w "$pkg_src_dir")"
else
  pkg_src_dir="$(readlink -f "$pkg_src_dir")"
fi

# shellcheck disable=SC2064
trap "cd '$PWD'" EXIT

set +u
if [ -z "$HICTKR_TMPDIR" ]; then
  HICTKR_TMPDIR="$wd/build/tmp/"
fi
set -u

TMPDIR="$HICTKR_TMPDIR"

export HICTKR_TMPDIR
export TMPDIR

cleanup_script="$pkg_src_dir/cleanup"

if [ -f "$cleanup_script.win" ]; then
  # script has been called by configure.win which should've already initialized the cleanup script
  mv "$cleanup_script.win" "$cleanup_script"
elif [ -f "$cleanup_script" ]; then
  1>&2 echo "Found existing cleanup script \"$cleanup_script\""
  1>&2 echo "Please manually remove it before continuing"
  exit 1
else
  makevars="$pkg_src_dir/src/Makevars"

  # shellcheck disable=SC2016
  printf '%s\nset -x\nrm -f "$0" "%s"\n' '#!/bin/sh' "$makevars" > "$cleanup_script"
fi

echo "find \"$pkg_src_dir/src\" -type f -name '*.o' -delete -print" >> "$cleanup_script"
echo "find \"$pkg_src_dir/src\" -type f -name '*.so' -delete -print" >> "$cleanup_script"

chmod 700 "$cleanup_script"

mkdir -p "$TMPDIR"
1>&2 echo "TMPDIR='$TMPDIR'"

UV_VERSION='0.8.5'
export UV_INSTALLER_URL="https://astral.sh/uv/$UV_VERSION/install.sh"
export UV_INSTALLER_SHA256='8e6284da8ff65d4c1d9d978eeb8fc905462eeba7b7e6e55a4c12ecb0412965d9'
export UV_INSTALLER_DEST="$TMPDIR/install.sh"

export UV_INSTALL_DIR="$TMPDIR/uv-install"
export UV_CACHE_DIR="$TMPDIR/uv-cache"
export UV_PYTHON_INSTALL_DIR="$TMPDIR/python-install"
export UV_NO_MODIFY_PATH=1

export VIRTUAL_ENV="$TMPDIR/venv/"


if command -v curl >/dev/null 2>&1; then
  curl -L "$UV_INSTALLER_URL" -o "$UV_INSTALLER_DEST"
elif command -v wget >/dev/null 2>&1; then
  wget -O "$UV_INSTALLER_DEST" "$UV_INSTALLER_URL"
else
  1>&2 echo "Unable to download file using curl or wget"
  1>&2 echo "Please install either tools an try again"
  exit 1
fi

if command -v sha256sum >/dev/null 2>&1; then
  checksum="$(sha256sum "$UV_INSTALLER_DEST")"
elif command -v shasum >/dev/null 2>&1; then
  checksum="$(shasum -a 256 "$UV_INSTALLER_DEST")"
elif command -v openssl >/dev/null 2>&1; then
  checksum="$(openssl dgst -sha256 "$UV_INSTALLER_DEST")"
else
  1>&2 echo "Error: Cannot find a command to compute SHA-256 checksums."
  1>&2 echo "Skipping uv checksum!!"
  checksum="$UV_INSTALLER_SHA256"
fi

checksum="$(echo "$checksum" | tr -d \\ 2>/dev/null |  cut -f 1 -d ' ')"
if [ "$checksum" != "$UV_INSTALLER_SHA256" ]; then
  1>&2 echo "FAILURE: Checksum verification for uv's install script failed!"
  1>&2 echo "Expected $UV_INSTALLER_SHA256, found $checksum"
  exit 1
fi

sh "$UV_INSTALLER_DEST"

PATH="$UV_INSTALL_DIR:$PATH"

uv venv \
  --python 3.13 \
  --link-mode=copy \
  "$VIRTUAL_ENV"

uv pip install 'cmake>=3.25,<4' 'conan>=2.15,<3' ninja


if [ -d "$VIRTUAL_ENV/bin" ]; then
  PATH="$VIRTUAL_ENV/bin/:$PATH"
elif [ -d "$VIRTUAL_ENV/Scripts" ]; then
  PATH="$VIRTUAL_ENV/Scripts/:$PATH"
else
  1>&2 echo "FAILURE: unable to add venv bin folder to PATH!"
  exit 1
fi

set +u
if [ -z "$HICTKR_CONAN_HOME" ]; then
  export HICTKR_CONAN_HOME="$TMPDIR/.conan2"
fi
set -u

export CONAN_HOME="$HICTKR_CONAN_HOME"

which conan
conan --version

# shellcheck disable=SC2086
python "$pkg_src_dir/tools/generate_makevars.py" \
  --no-venv \
  --workdir "$pkg_src_dir"


1>&2 echo '### BEGIN Makevars'
1>&2 cat "$pkg_src_dir/src/Makevars"
1>&2 echo '### END Makevars'

1>&2 echo '### BEGIN cleanup'
1>&2 cat "$cleanup_script"
1>&2 echo '### END cleanup'
