# Copyright (C) 2025 Roberto Rossini <roberros@uio.no>
#
# SPDX-License-Identifier: GPL-2.0-or-later
#
# This library is free software: you can redistribute it and/or
# modify it under the terms of the GNU Public License as published
# by the Free Software Foundation; either version 3 of the License,
# or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Public License along
# with this library.  If not, see
# <https://www.gnu.org/licenses/>.

name: CI

on:
  workflow_dispatch:

  push:
    branches: [main]
    paths:
      - ".github/workflows/ci.yml"
      - "deps/conanfile.py"
      - "deps/generate_makevars.py"
      - "R/**"
      - "inst/extdata/**"
      - "man/**"
      - "src/**"
      - "tests/**"
      - ".Rbuildignore"
      - "configure"
      - "configure.win"
      - "DESCRIPTION"
      - "NAMESPACE"
    tags:
      - "v*.*.*"

  pull_request:
    paths:
      - ".github/workflows/ci.yml"
      - "deps/conanfile.py"
      - "deps/generate_makevars.py"
      - "R/**"
      - "inst/extdata/**"
      - "man/**"
      - "src/**"
      - "tests/**"
      - ".Rbuildignore"
      - "configure"
      - "configure.win"
      - "DESCRIPTION"
      - "NAMESPACE"

# https://stackoverflow.com/a/72408109
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: windows-2025, r-version: 4.5, cc: "gcc", cxx: "g++" }
          - { os: macos-15, r-version: 4.5, cc: "clang", cxx: "clang++" }
          - { os: ubuntu-24.04, r-version: 4.0, cc: "gcc", cxx: "g++" }
          - { os: ubuntu-24.04, r-version: 4.1, cc: "gcc", cxx: "g++" }
          - { os: ubuntu-24.04, r-version: 4.2, cc: "gcc", cxx: "g++" }
          - { os: ubuntu-24.04, r-version: 4.3, cc: "gcc", cxx: "g++" }
          - { os: ubuntu-24.04, r-version: 4.4, cc: "gcc", cxx: "g++" }
          - { os: ubuntu-24.04, r-version: 4.5, cc: "gcc", cxx: "g++" }
          - { os: ubuntu-24.04, r-version: 4.0, cc: "clang", cxx: "clang++" }
          - { os: ubuntu-24.04, r-version: 4.1, cc: "clang", cxx: "clang++" }
          - { os: ubuntu-24.04, r-version: 4.2, cc: "clang", cxx: "clang++" }
          - { os: ubuntu-24.04, r-version: 4.3, cc: "clang", cxx: "clang++" }
          - { os: ubuntu-24.04, r-version: 4.4, cc: "clang", cxx: "clang++" }
          - { os: ubuntu-24.04, r-version: 4.5, cc: "clang", cxx: "clang++" }

    runs-on: ${{ matrix.os }}

    env:
      HICTKR_CONAN_HOME: "${{ github.workspace }}/.conan2/"
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}

    steps:
      - uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Detect number of CPUs
        run: |
          cmd='import multiprocessing as mp; print(mp.cpu_count())'
          NPROC="$(python -c "$cmd")"
          echo "NPROC=$NPROC" >> "$GITHUB_ENV"
          # shellcheck disable=SC2193
          if [[ '${{ matrix.os }}' != windows-* ]]; then
            echo "MAKE='make -j$NPROC'" >> "$GITHUB_ENV"
          fi

      - name: Install pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}
          use-public-rspm: true
          Ncpus: ${{ env.NPROC }}

      - name: Add requirements
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Restore Conan cache
        uses: actions/cache@v4
        id: restore-conan-cache
        with:
          key: conan-cache-ci-${{ matrix.os }}-${{ hashFiles( 'configure', 'deps/conanfile.py', 'deps/generate_makevars.py') }}
          path: ${{ env.HICTKR_CONAN_HOME }}/p

      - name: Build and test package
        uses: r-lib/actions/check-r-package@v2

      - name: Clean Conan cache (post-build)
        if: steps.restore-conan-cache.outputs.cache-hit != 'true'
        run: |
          pip install 'conan>=2'

          export CONAN_HOME="$HICTKR_CONAN_HOME"

          conan cache clean "*" --build
          conan cache clean "*" --download
          conan cache clean "*" --source

  ci-status-check:
    name: Status Check (CI)
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs:
      - ci

    steps:
      - name: Collect job results
        if: needs.ci.result != 'success'
        run: exit 1
